@*@model IUMS.Entities.MASTER_COURSE*@
@model IUEMS.Models.Master.MastercourseModel
    @{
        ViewBag.Title = "Create";
        Layout = null;
    }

    <div class="modal" id="modal" tabindex="-1" role="dialog">
        <div class="" style="width:850px;" role="document">
            <div class="modal-content">
                @{string ajaxPostUrl = Url.Action("Create", null, null, Request.Url.Scheme);}

                <div class="modal-header">
                    <div class="col-md-10">
                        <h3>Add New Course</h3>
                    </div>
                    <div class="col-md-2">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                </div>
                @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "form", ajaxPostUrl = ajaxPostUrl }))
                {
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="ID" id="ID" value="0" />
                    <div class="modal-body">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-horizontal">
                            @*<h4>MASTER_COURSE</h4>*@
                            <hr />
                            @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })*@
                            <div class="form-group">
                                @Html.LabelFor(model => model.FACULTY_ID, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("FACULTY_ID", (IEnumerable<SelectListItem>)ViewData["faculty_list"], "Select Type", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.FACULTY_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.DEPARTMENT_ID, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("DEPARTMENT_ID", (IEnumerable<SelectListItem>)ViewData["dept_list"], "Select Type", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.DEPARTMENT_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.PROGRAM_ID, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("PROGRAM_ID", (IEnumerable<SelectListItem>)ViewData["program_list"], "Select Program", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.PROGRAM_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.LEVEL_ID, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("LEVEL_ID", (IEnumerable<SelectListItem>)ViewData["level_id"], "Select Program", new { @class = "form-control LEVEL_ID" })
                                    @Html.ValidationMessageFor(model => model.LEVEL_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.SEMESTER_ID, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("SEMESTER_ID", (IEnumerable<SelectListItem>)ViewData["semester_list"], "Select Semester", new { @class = "form-control SEMESTER_ID" })
                                    @Html.ValidationMessageFor(model => model.SEMESTER_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.COURSE_NAME, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.COURSE_NAME, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.COURSE_NAME, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.COURSE_CODE, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.COURSE_CODE, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.COURSE_CODE, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.COURSE_CREDIT, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.COURSE_CREDIT, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.COURSE_CREDIT, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.HOUR, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.HOUR, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.HOUR, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.YEAR, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("YEAR", (IEnumerable<SelectListItem>)ViewData["exam_year"], "Select Type", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.YEAR, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.COURSE_TYPE, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("COURSE_TYPE", null, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.COURSE_TYPE, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.IS_MAJOR_COURSE, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <input type="checkbox" name="IS_MAJOR_COURSE" value="1" checked="checked" />
                                    @Html.ValidationMessageFor(model => model.IS_MAJOR_COURSE, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.FULL_MARKS, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.FULL_MARKS, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.FULL_MARKS, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.PASS_MARKS, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("PASS_MARKS", null, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.PASS_MARKS, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.INTERNAL_MARKS, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.INTERNAL_MARKS, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.INTERNAL_MARKS, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.THEORY_MARKS, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.THEORY_MARKS, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.THEORY_MARKS, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EXAMINER_QTY, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("EXAMINER_QTY", null, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.EXAMINER_QTY, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            @*<div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>*@
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-success" onclick="formValidSend()">Create</button>
                        <button type="button" class="btn btn-primary pull-right" data-dismiss="modal">Close</button>
                    </div>
                }
            </div>
        </div>
    </div>

    <script type="text/javascript">
        $(document).ready(function () {
           
            $.validator.unobtrusive.parse("#form");
        });
    </script>
