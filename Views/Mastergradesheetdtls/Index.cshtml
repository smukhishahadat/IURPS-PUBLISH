@model IEnumerable<IUMS.Entities.GRADE_SHEET_DETAIL>
@{
	ViewBag.Title = "Index";
	Layout = "~/Views/Shared/_LayoutPageMetronic.cshtml";
}


@{
    string Create = Url.Action("Create", null, null, Request.Url.Scheme);
    string Details = Url.Action("Details", null, null, Request.Url.Scheme);
    string Edit = Url.Action("Edit", null, null, Request.Url.Scheme);
    string Delete = Url.Action("Delete", null, null, Request.Url.Scheme);
}

<div class='row'>
	<div class='col-md-10 text-left'>
		<h3 class='text-info'>@HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString()</h3>
	</div>
    <div class='col-md-2 text-right'>
        <button class='btn btn-success btn-madd' onclick='btnAddClick($(this))' myUrl='@Create'><i class='fa fa-plus-circle'></i> Add</button>
    </div>
</div>

@if (@Model != null)
{
    @(Html
        .Grid(Model)
        .Build(columns =>
        {
columns.Add(model => $@"<button class='btn btn-primary btn-mdetails' value='{model.ID}' onclick='btnDetailsClick($(this));' myUrl='{Details}'><i class='fa fa-info'></i> Details</button>
						<button class='btn btn-warning btn-medit'    value='{model.ID}' onclick='btnEditClick($(this))' myUrl='{Edit}'><i class='fa fa-pencil'></i> Edit</button>
						<button class='btn btn-danger  btn-mdelete'  value='{model.ID}' onclick='btnDeleteClick($(this))' myUrl='{Delete}'><i class='fa fa-times-circle'></i></button>").Encoded(false).Css("management-col").Titled("MANAGEMENT");
			columns.Add(model => model.ID).Titled("ID");
						columns.Add(model => model.MASTER_ID).Titled("MASTER_ID");
						columns.Add(model => model.LETTER_GRADE).Titled("LETTER_GRADE");
						columns.Add(model => model.GRADE_POINT).Titled("GRADE_POINT");
						columns.Add(model => model.MINIMUM_MARKS).Titled("MINIMUM_MARKS");
						columns.Add(model => model.MAXIMUM_MARKS).Titled("MAXIMUM_MARKS");
						columns.Add(model => model.MINIMUM_GRADE).Titled("MINIMUM_GRADE");
						columns.Add(model => model.MAXIMUM_GRADE).Titled("MAXIMUM_GRADE");
						columns.Add(model => model.REMARKS).Titled("REMARKS");
						
        })
        .WithFilterMode(GridFilterMode.FilterRow)
        .Empty("No data found")
        .MultiFilterable()
        .Filterable()
        .Sortable()
    )
}

@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/_global.js"></script>
    <script src="~/Scripts/MvcGrid/mvc-grid.js"></script>
    <link href="~/Content/MvcGrid/mvc-grid.css" rel="stylesheet" />
    <link href="~/Content/font-awesome.css" rel="stylesheet" />
    <link href="~/Content/_global.css" rel="stylesheet" />
}

