@model IUMS.Entities.HR_PERSONALINFO
@{
    /**/

    Layout = null;
}

<div class="modal" id="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            @{string ajaxPostUrl = Url.Action("Edit", null, null, Request.Url.Scheme);}
            @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "form", ajaxPostUrl = ajaxPostUrl }))
            {
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <div class="col-md-10">
                        <h3>
                            Edit Employee
                        </h3>
                    </div>
                    <div class="col-md-2">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                </div>
                <div class="modal-body">
                    <div class="col-md-12">
                        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                    </div>
                    @Html.HiddenFor(model => model.ID)
                    <table class="table table-striped table-hover table-bordered">
                        @*<thead class="thead-dark">
            <tr>
                <th scope="col">DisplayNameFor</th>
                <th scope="col">DisplayFor</th>
            </tr>
        </thead>*@
                        <tbody>
                            <tr>
                                <td style="width:30%;">
                                    @Html.LabelFor(model => model.EMPLOYEE_TYPE, htmlAttributes: new { @class = "control-label col-md-12" })
                                </td>
                                <td>
                                    @Html.DropDownList("EMPLOYEE_TYPE", (IEnumerable<SelectListItem>)ViewData["emp_type"], "Employee Type", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.EMPLOYEE_TYPE, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.LabelFor(model => model.EMPLOYEE_ID, htmlAttributes: new { @class = "control-label col-md-12" })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.EMPLOYEE_ID, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EMPLOYEE_ID, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.LabelFor(model => model.EMPLOYEE_NAME, htmlAttributes: new { @class = "control-label col-md-12" })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.EMPLOYEE_NAME, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EMPLOYEE_NAME, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.LabelFor(model => model.MOBILE, htmlAttributes: new { @class = "control-label col-md-12" })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.MOBILE, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MOBILE, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.LabelFor(model => model.EMAIL, htmlAttributes: new { @class = "control-label col-md-12" })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.EMAIL, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EMAIL, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.LabelFor(model => model.FATHER_NAME, htmlAttributes: new { @class = "control-label col-md-12" })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.FATHER_NAME, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.FATHER_NAME, "", new { @class = "text-danger" })
                                </td>
                            </tr>

                            <tr>
                                <td>
                                    @Html.LabelFor(model => model.MOTHER_NAME, htmlAttributes: new { @class = "control-label col-md-12" })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.MOTHER_NAME, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MOTHER_NAME, "", new { @class = "text-danger" })
                                </td>
                            </tr>

                            <tr>
                                <td>
                                    @Html.LabelFor(model => model.DESIGNATION, htmlAttributes: new { @class = "control-label col-md-12" })
                                </td>
                                <td>
                                    @Html.DropDownList("DESIGNATION", (IEnumerable<SelectListItem>)ViewData["desig_list"], "Select Faculty", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.DESIGNATION, "", new { @class = "text-danger" })
                                </td>
                            </tr>

                            <tr>
                                <td>
                                    @Html.LabelFor(model => model.FACULTY, htmlAttributes: new { @class = "control-label col-md-12" })
                                </td>
                                <td>
                                    @Html.DropDownList("FACULTY", (IEnumerable<SelectListItem>)ViewData["faculty_list"], "Select Faculty", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.FACULTY, "", new { @class = "text-danger" })
                                </td>
                            </tr>

                            <tr>
                                <td>
                                    @Html.LabelFor(model => model.DEPARTMENT, htmlAttributes: new { @class = "control-label col-md-12" })
                                </td>
                                <td>
                                    @Html.DropDownList("DEPARTMENT", (IEnumerable<SelectListItem>)ViewData["dept_list"], "Select Department", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.DEPARTMENT, "", new { @class = "text-danger" })
                                </td>
                            </tr>

                        </tbody>
                    </table>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-success" onclick="formValidSend()">Save</button>
                    <button type="button" class="btn btn-primary pull-right" data-dismiss="modal">Close</button>
                </div>
            }
        </div>
    </div>
</div>
