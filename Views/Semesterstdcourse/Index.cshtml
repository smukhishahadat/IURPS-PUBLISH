@model IEnumerable<IUMS.Entities.ACA_SEMESTER_STD_COURSE>
@{
	ViewBag.Title = "Index";
	Layout = "~/Views/Shared/_LayoutPageMetronic.cshtml";
}


@{
    string Create = Url.Action("Create", null, null, Request.Url.Scheme);
    string Details = Url.Action("Details", null, null, Request.Url.Scheme);
    string Edit = Url.Action("Edit", null, null, Request.Url.Scheme);
    string Delete = Url.Action("Delete", null, null, Request.Url.Scheme);
}

<div class='row'>
	<div class='col-md-10 text-left'>
		<h3 class='text-info'>@HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString()</h3>
	</div>
    <div class='col-md-2 text-right'>
        <button class='btn btn-success btn-madd' onclick='btnAddClick($(this))' myUrl='@Create'><i class='fa fa-plus-circle'></i> Add</button>
    </div>
</div>

@if (@Model != null)
{
    @(Html
        .Grid(Model)
        .Build(columns =>
        {
columns.Add(model => $@"<button class='btn btn-primary btn-mdetails' value='{model.ID}' onclick='btnDetailsClick($(this));' myUrl='{Details}'><i class='fa fa-info'></i> Details</button>
						<button class='btn btn-warning btn-medit'    value='{model.ID}' onclick='btnEditClick($(this))' myUrl='{Edit}'><i class='fa fa-pencil'></i> Edit</button>
						<button class='btn btn-danger  btn-mdelete'  value='{model.ID}' onclick='btnDeleteClick($(this))' myUrl='{Delete}'><i class='fa fa-times-circle'></i></button>").Encoded(false).Css("management-col").Titled("MANAGEMENT");
			columns.Add(model => model.ID).Titled("ID");
						columns.Add(model => model.SEMESTER_STUDENT_ID).Titled("SEMESTER_STUDENT_ID");
						columns.Add(model => model.COURSE_CODE).Titled("COURSE_CODE");
						columns.Add(model => model.COURSE_REGISTRATION_DATE).Titled("COURSE_REGISTRATION_DATE");
						columns.Add(model => model.COURSE_TYPE).Titled("COURSE_TYPE");
						columns.Add(model => model.SUPL_INTERNAL_MARKS).Titled("SUPL_INTERNAL_MARKS");
						columns.Add(model => model.FINAL_MARK).Titled("FINAL_MARK");
						columns.Add(model => model.QUIZ_TEST).Titled("QUIZ_TEST");
						columns.Add(model => model.CLASS_TEST).Titled("CLASS_TEST");
						columns.Add(model => model.ATTENDANCE).Titled("ATTENDANCE");
						columns.Add(model => model.BEHAVIOR).Titled("BEHAVIOR");
						columns.Add(model => model.PRESENTATION).Titled("PRESENTATION");
						columns.Add(model => model.ASSIGNMENT).Titled("ASSIGNMENT");
						columns.Add(model => model.LAB_TEST).Titled("LAB_TEST");
						columns.Add(model => model.PROJECT).Titled("PROJECT");
						columns.Add(model => model.PERFORMANCE).Titled("PERFORMANCE");
						columns.Add(model => model.THEORETICAL).Titled("THEORETICAL");
						columns.Add(model => model.PRATICAL).Titled("PRATICAL");
						columns.Add(model => model.OTHER).Titled("OTHER");
						columns.Add(model => model.EXTERNAL_THESIS_EVALUTION).Titled("EXTERNAL_THESIS_EVALUTION");
						columns.Add(model => model.SUPERVISOR_THESIS_EVALUTION).Titled("SUPERVISOR_THESIS_EVALUTION");
						columns.Add(model => model.REPORTED).Titled("REPORTED");
						columns.Add(model => model.REMARKS).Titled("REMARKS");
						columns.Add(model => model.SESSIONAL_FINAL).Titled("SESSIONAL_FINAL");
						columns.Add(model => model.IS_FINAL).Titled("IS_FINAL");
						columns.Add(model => model.TOTAL_MARKS).Titled("TOTAL_MARKS");
						columns.Add(model => model.LETTER_GRADE).Titled("LETTER_GRADE");
						columns.Add(model => model.GRADE_POINT).Titled("GRADE_POINT");
						columns.Add(model => model.CREDIT_EARNED).Titled("CREDIT_EARNED");
						columns.Add(model => model.STATUS).Titled("STATUS");
						columns.Add(model => model.CREDIT_ATTEMPED).Titled("CREDIT_ATTEMPED");
						columns.Add(model => model.HEAD_STATUS).Titled("HEAD_STATUS");
						columns.Add(model => model.DEAN_STATUS).Titled("DEAN_STATUS");
						columns.Add(model => model.SECRETARY_STATUS).Titled("SECRETARY_STATUS");
						columns.Add(model => model.VC_STATUS).Titled("VC_STATUS");
						columns.Add(model => model.TOTAL_DAYS).Titled("TOTAL_DAYS");
						columns.Add(model => model.PRESENT).Titled("PRESENT");
						columns.Add(model => model.ABSENT).Titled("ABSENT");
						columns.Add(model => model.IS_ATT_FINAL).Titled("IS_ATT_FINAL");
						columns.Add(model => model.PROGRAM_ID).Titled("PROGRAM_ID");
						columns.Add(model => model.SEMESTER_ID).Titled("SEMESTER_ID");
						columns.Add(model => model.YEAR).Titled("YEAR");
						columns.Add(model => model.SESSION_ID).Titled("SESSION_ID");
						columns.Add(model => model.BATCH_ID).Titled("BATCH_ID");
						columns.Add(model => model.LEVEL_ID).Titled("LEVEL_ID");
						columns.Add(model => model.SCHEDULE_ID).Titled("SCHEDULE_ID");
						columns.Add(model => model.SECTION_ID).Titled("SECTION_ID");
						columns.Add(model => model.APPROVE).Titled("APPROVE");
						columns.Add(model => model.IS_SPL).Titled("IS_SPL");
						columns.Add(model => model.IS_SPL_FINAL).Titled("IS_SPL_FINAL");
						columns.Add(model => model.SPL_HEAD).Titled("SPL_HEAD");
						columns.Add(model => model.SPL_DEAN).Titled("SPL_DEAN");
						columns.Add(model => model.IS_SPL_PUBLISH).Titled("IS_SPL_PUBLISH");
						columns.Add(model => model.IS_SUPPLE).Titled("IS_SUPPLE");
						columns.Add(model => model.IS_SUPPLE_FINAL).Titled("IS_SUPPLE_FINAL");
						columns.Add(model => model.SUPPLE_HEAD).Titled("SUPPLE_HEAD");
						columns.Add(model => model.SUPPLE_DEAN).Titled("SUPPLE_DEAN");
						columns.Add(model => model.IS_SUPPLE_PUBLISH).Titled("IS_SUPPLE_PUBLISH");
						columns.Add(model => model.SPL_SEC).Titled("SPL_SEC");
						columns.Add(model => model.IMP_RTK_STATUS).Titled("IMP_RTK_STATUS");
						columns.Add(model => model.IS_FINAL_FIRST_EXAMINER).Titled("IS_FINAL_FIRST_EXAMINER");
						columns.Add(model => model.INTERNAL_MARKS).Titled("INTERNAL_MARKS");
						columns.Add(model => model.FIRST_EXAMINER_MARKS).Titled("FIRST_EXAMINER_MARKS");
						columns.Add(model => model.SECOND_EXAMINER_MARKS).Titled("SECOND_EXAMINER_MARKS");
						columns.Add(model => model.IS_FINAL_SECOND_EXAMINER).Titled("IS_FINAL_SECOND_EXAMINER");
						columns.Add(model => model.THIRD_EXAMINER_MARKS).Titled("THIRD_EXAMINER_MARKS");
						columns.Add(model => model.AVG_MARKS).Titled("AVG_MARKS");
						columns.Add(model => model.THIRD_EXAMINER_NEED).Titled("THIRD_EXAMINER_NEED");
						columns.Add(model => model.IS_FINAL_THIRD_EXAMINER).Titled("IS_FINAL_THIRD_EXAMINER");
						columns.Add(model => model.FIRST_SUPL_MARKS).Titled("FIRST_SUPL_MARKS");
						columns.Add(model => model.SECOND_SUPL_MARKS).Titled("SECOND_SUPL_MARKS");
						columns.Add(model => model.THIRD_SUPL_MARKS).Titled("THIRD_SUPL_MARKS");
						columns.Add(model => model.IS_FINAL_FIRST_SUPLI).Titled("IS_FINAL_FIRST_SUPLI");
						columns.Add(model => model.IS_FINAL_SECOND_SUPLI).Titled("IS_FINAL_SECOND_SUPLI");
						columns.Add(model => model.IS_FINAL_THIRD_SUPLI).Titled("IS_FINAL_THIRD_SUPLI");
						columns.Add(model => model.MID_TERM_MARK).Titled("MID_TERM_MARK");
						columns.Add(model => model.TOTAL_MARKS_SUPL).Titled("TOTAL_MARKS_SUPL");
						columns.Add(model => model.LETTER_GRADE_SUPL).Titled("LETTER_GRADE_SUPL");
						columns.Add(model => model.GRADE_POINT_SUPL).Titled("GRADE_POINT_SUPL");
						columns.Add(model => model.CREDIT_EARNED_SUPL).Titled("CREDIT_EARNED_SUPL");
						
        })
        .WithFilterMode(GridFilterMode.FilterRow)
        .Empty("No data found")
        .MultiFilterable()
        .Filterable()
        .Sortable()
    )
}

@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/_global.js"></script>
    <script src="~/Scripts/MvcGrid/mvc-grid.js"></script>
    <link href="~/Content/MvcGrid/mvc-grid.css" rel="stylesheet" />
    <link href="~/Content/font-awesome.css" rel="stylesheet" />
    <link href="~/Content/_global.css" rel="stylesheet" />
}

