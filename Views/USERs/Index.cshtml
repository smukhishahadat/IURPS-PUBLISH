@model IPagedList<IUMS.Entities.USER>
@using PagedList;
@using PagedList.Mvc;
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutPageMetronic.cshtml";
}


@{
    string Create = Url.Action("Create", null, null, Request.Url.Scheme);
    string Details = Url.Action("Details", null, null, Request.Url.Scheme);
    string Edit = Url.Action("Edit", null, null, Request.Url.Scheme);
    string Delete = Url.Action("Delete", null, null, Request.Url.Scheme);
}

<div class='row'>
    <div class='col-md-10 text-left'>
        <h3 class='text-info'>User List</h3>
    </div>
    @*<div class='col-md-2 text-right'>
            <button class='btn btn-success btn-madd' onclick='btnAddClick($(this))' myUrl='@Create'><i class='fa fa-plus-circle'></i> Add</button>
        </div>*@
</div>

@if (@Model != null)
{
    @(Html
                        .Grid(Model)
                        .Build(columns =>
                        {

            //columns.Add(model => model.ID).Titled("ID");
            //columns.Add(model => model.ROLE_ID).Titled("ROLE_ID");
            columns.Add(model => model.USERNAME).Titled("USERNAME");
                            columns.Add(model => model.FULL_NAME).Titled("FULL_NAME");

            //columns.Add(model => model.PASSWORD).Titled("PASSWORD");
            columns.Add(model => model.EMAIL).Titled("EMAIL");
            //columns.Add(model => model.SESSION_ID).Titled("SESSION_ID");
            //columns.Add(model => model.EMAIL_ALERT).Titled("EMAIL_ALERT");
            //columns.Add(model => model.BANNED).Titled("BANNED");
            //columns.Add(model => model.BAN_REASON).Titled("BAN_REASON");
            //columns.Add(model => model.NEWPASS).Titled("NEWPASS");
            //columns.Add(model => model.NEWPASS_KEY).Titled("NEWPASS_KEY");
            //columns.Add(model => model.NEWPASS_TIME).Titled("NEWPASS_TIME");
            //columns.Add(model => model.LOGIN_STATUS).Titled("LOGIN_STATUS");
            //columns.Add(model => model.LAST_IP).Titled("LAST_IP");
            //columns.Add(model => model.LAST_LOGIN).Titled("LAST_LOGIN");
            //columns.Add(model => model.CREATED).Titled("CREATED");
            //columns.Add(model => model.MODIFIED_DATE).Titled("MODIFIED_DATE");
            //columns.Add(model => model.USER_MODULE).Titled("USER_MODULE");
            //columns.Add(model => model.ADMISSION_PREV).Titled("ADMISSION_PREV");
            //columns.Add(model => model.ACADEMIC_PREV).Titled("ACADEMIC_PREV");
            //columns.Add(model => model.EXAM_PREV).Titled("EXAM_PREV");
            //columns.Add(model => model.GUEST_HOUSE_PREV).Titled("GUEST_HOUSE_PREV");
            //columns.Add(model => model.DEGREE_ID).Titled("DEGREE_ID");
            //columns.Add(model => model.HR_PREV).Titled("HR_PREV");
            //columns.Add(model => model.ETENDER_PREV).Titled("ETENDER_PREV");
            //columns.Add(model => model.INVENTORY_PREV).Titled("INVENTORY_PREV");
            //columns.Add(model => model.HOUSE_ALLOTMENT_PREV).Titled("HOUSE_ALLOTMENT_PREV");
            //columns.Add(model => model.JOURNAL_PREV).Titled("JOURNAL_PREV");
            //columns.Add(model => model.EVENT_PREV).Titled("EVENT_PREV");
            //columns.Add(model => model.PROFILE_PREV).Titled("PROFILE_PREV");
            //columns.Add(model => model.HALL_PREV).Titled("HALL_PREV");
            //columns.Add(model => model.FILE_PREV).Titled("FILE_PREV");
            //columns.Add(model => model.MOBILE).Titled("MOBILE");
            //columns.Add(model => model.ACCOUNTS_PREV).Titled("ACCOUNTS_PREV");
            //columns.Add(model => model.JOB_PREV).Titled("JOB_PREV");
            //columns.Add(model => model.DEGREE_TYPE).Titled("DEGREE_TYPE");
            //columns.Add(model => model.DEGREE_TITLE).Titled("DEGREE_TITLE");
            //columns.Add(model => model.SSC_GPA).Titled("SSC_GPA");
            //columns.Add(model => model.HSC_GPA).Titled("HSC_GPA");
            //columns.Add(model => model.FREEDOM_FIGHTER).Titled("FREEDOM_FIGHTER");
            //columns.Add(model => model.SUBJECT_O_LEVEL).Titled("SUBJECT_O_LEVEL");
            //columns.Add(model => model.SUBJECT_A_LEVEL).Titled("SUBJECT_A_LEVEL");
            //columns.Add(model => model.GPA_FOUR).Titled("GPA_FOUR");
            //columns.Add(model => model.GPA_BELOW_FOUR).Titled("GPA_BELOW_FOUR");
            //columns.Add(model => model.AVERAGE_MARK).Titled("AVERAGE_MARK");
            //columns.Add(model => model.EVERY_COURSE_MARK).Titled("EVERY_COURSE_MARK");
            //columns.Add(model => model.UNDERGRADUATE_GPA).Titled("UNDERGRADUATE_GPA");
            //columns.Add(model => model.FACULTY_ID).Titled("FACULTY_ID");
            //columns.Add(model => model.DEPARTMENT_ID).Titled("DEPARTMENT_ID");
            //columns.Add(model => model.PROGRAM_ID).Titled("PROGRAM_ID");
            columns.Add(model => $@"<button class='btn btn-primary btn-mdetails' value='{model.ID}' onclick='btnDetailsClick($(this));' myUrl='{Details}'><i class='fa fa-info'></i> Details</button>
        <button class='btn btn-warning btn-medit'    value='{model.ID}' onclick='btnEditClick($(this))' myUrl='{Edit}'><i class='fa fa-pencil'></i> Edit</button>").Encoded(false).Css("management-col").Titled("MANAGEMENT");

                        })
                        //.WithFilterMode(GridFilterMode.FilterRow)
                        .Empty("No data found")
            //.MultiFilterable()
            //.Filterable()
            //.Sortable()
    )
    @Html.PagedListPager(Model, page => Url.Action("Index", "Users", new { i = page, search = Request.QueryString["search"] }), new PagedListRenderOptions { LinkToFirstPageFormat = "First", LinkToPreviousPageFormat = "Previous", LinkToNextPageFormat = "Next", LinkToLastPageFormat = "Last" })

}

@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/_global.js"></script>
    <script src="~/Scripts/MvcGrid/mvc-grid.js"></script>
    <link href="~/Content/MvcGrid/mvc-grid.css" rel="stylesheet" />
    <link href="~/Content/font-awesome.css" rel="stylesheet" />
    <link href="~/Content/_global.css" rel="stylesheet" />
}

