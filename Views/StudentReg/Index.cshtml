@model IEnumerable<IUMS.Entities.ACADEMIC_STUDENT_PERSONAL>
@{
	ViewBag.Title = "Index";
	Layout = "~/Views/Shared/_LayoutPageMetronic.cshtml";
}


@{
    string Create = Url.Action("Create", null, null, Request.Url.Scheme);
    string Details = Url.Action("Details", null, null, Request.Url.Scheme);
    string Edit = Url.Action("Edit", null, null, Request.Url.Scheme);
    string Delete = Url.Action("Delete", null, null, Request.Url.Scheme);
}

<div class='row'>
	<div class='col-md-10 text-left'>
		<h3 class='text-info'>@HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString()</h3>
	</div>
    <div class='col-md-2 text-right'>
        <button class='btn btn-success btn-madd' onclick='btnAddClick($(this))' myUrl='@Create'><i class='fa fa-plus-circle'></i> Add</button>
    </div>
</div>

@if (@Model != null)
{
    @(Html
        .Grid(Model)
        .Build(columns =>
        {
columns.Add(model => $@"<button class='btn btn-primary btn-mdetails' value='{model.ID}' onclick='btnDetailsClick($(this));' myUrl='{Details}'><i class='fa fa-info'></i> Details</button>
						<button class='btn btn-warning btn-medit'    value='{model.ID}' onclick='btnEditClick($(this))' myUrl='{Edit}'><i class='fa fa-pencil'></i> Edit</button>
						<button class='btn btn-danger  btn-mdelete'  value='{model.ID}' onclick='btnDeleteClick($(this))' myUrl='{Delete}'><i class='fa fa-times-circle'></i></button>").Encoded(false).Css("management-col").Titled("MANAGEMENT");
			columns.Add(model => model.ID).Titled("ID");
						columns.Add(model => model.STUDENT_ID).Titled("STUDENT_ID");
						columns.Add(model => model.FULL_NAME).Titled("FULL_NAME");
						columns.Add(model => model.GENDER).Titled("GENDER");
						columns.Add(model => model.DATE_OF_BIRTH).Titled("DATE_OF_BIRTH");
						columns.Add(model => model.PLACE_OF_BIRTH).Titled("PLACE_OF_BIRTH");
						columns.Add(model => model.MARITAL_STATUS).Titled("MARITAL_STATUS");
						columns.Add(model => model.NATIONALITY).Titled("NATIONALITY");
						columns.Add(model => model.RELIGION).Titled("RELIGION");
						columns.Add(model => model.MAILING_ADDRESS).Titled("MAILING_ADDRESS");
						columns.Add(model => model.MOBILE_NO).Titled("MOBILE_NO");
						columns.Add(model => model.HOME_PHONE).Titled("HOME_PHONE");
						columns.Add(model => model.EMAIL).Titled("EMAIL");
						columns.Add(model => model.PERMANENT_ADDRESS).Titled("PERMANENT_ADDRESS");
						columns.Add(model => model.NATIONAL_ID).Titled("NATIONAL_ID");
						columns.Add(model => model.BLOOD_GROUP).Titled("BLOOD_GROUP");
						columns.Add(model => model.COUNTRY).Titled("COUNTRY");
						columns.Add(model => model.DISTRICT).Titled("DISTRICT");
						columns.Add(model => model.FATHER_NAME).Titled("FATHER_NAME");
						columns.Add(model => model.FATHER_OCCUPATION).Titled("FATHER_OCCUPATION");
						columns.Add(model => model.FATHER_PHONE).Titled("FATHER_PHONE");
						columns.Add(model => model.FREEDOM_FIGHTER).Titled("FREEDOM_FIGHTER");
						columns.Add(model => model.MOTHER_NAME).Titled("MOTHER_NAME");
						columns.Add(model => model.MOTHER_OCCUPATION).Titled("MOTHER_OCCUPATION");
						columns.Add(model => model.MOTHER_PHONE).Titled("MOTHER_PHONE");
						columns.Add(model => model.PHOTO).Titled("PHOTO");
						columns.Add(model => model.SIGNATURE).Titled("SIGNATURE");
						columns.Add(model => model.IS_ADMITTED_BRAC).Titled("IS_ADMITTED_BRAC");
						columns.Add(model => model.IS_DISMISSED_ANY_INSTITUTE).Titled("IS_DISMISSED_ANY_INSTITUTE");
						columns.Add(model => model.ACADEMIC_HONORS_1).Titled("ACADEMIC_HONORS_1");
						columns.Add(model => model.ACADEMIC_HONORS_2).Titled("ACADEMIC_HONORS_2");
						columns.Add(model => model.ACADEMIC_HONORS_3).Titled("ACADEMIC_HONORS_3");
						columns.Add(model => model.IS_ADMITTED_ANY_INST).Titled("IS_ADMITTED_ANY_INST");
						columns.Add(model => model.CO_CURRICULAR_ACTIVITIES).Titled("CO_CURRICULAR_ACTIVITIES");
						columns.Add(model => model.PASSPORT_NO).Titled("PASSPORT_NO");
						columns.Add(model => model.USERNAME).Titled("USERNAME");
						columns.Add(model => model.RELIGION_OTHER).Titled("RELIGION_OTHER");
						columns.Add(model => model.IS_ADMITTED_TEXT).Titled("IS_ADMITTED_TEXT");
						columns.Add(model => model.IS_DISMISSFROM_TEXT).Titled("IS_DISMISSFROM_TEXT");
						columns.Add(model => model.IS_ANYOTHER_TEXT).Titled("IS_ANYOTHER_TEXT");
						columns.Add(model => model.IS_COCURRICULAM_TEXT).Titled("IS_COCURRICULAM_TEXT");
						columns.Add(model => model.IS_DEATH_TEXT).Titled("IS_DEATH_TEXT");
						columns.Add(model => model.PROGRAM_ID).Titled("PROGRAM_ID");
						columns.Add(model => model.BATCH_ID).Titled("BATCH_ID");
						columns.Add(model => model.LEVEL_ID).Titled("LEVEL_ID");
						columns.Add(model => model.SEMESTER_ID).Titled("SEMESTER_ID");
						columns.Add(model => model.SESSION_ID).Titled("SESSION_ID");
						columns.Add(model => model.YEAR).Titled("YEAR");
						columns.Add(model => model.ROLL).Titled("ROLL");
						columns.Add(model => model.VISITOR_ID).Titled("VISITOR_ID");
						columns.Add(model => model.SECTION_ID).Titled("SECTION_ID");
						columns.Add(model => model.CATEGORY_ID).Titled("CATEGORY_ID");
						columns.Add(model => model.SCHEDULE_ID).Titled("SCHEDULE_ID");
						columns.Add(model => model.THANA).Titled("THANA");
						columns.Add(model => model.APPROVAL_STATUS).Titled("APPROVAL_STATUS");
						columns.Add(model => model.ADMISSION_BY).Titled("ADMISSION_BY");
						columns.Add(model => model.REMARK).Titled("REMARK");
						columns.Add(model => model.SSC_ROLL).Titled("SSC_ROLL");
						columns.Add(model => model.HSC_ROLL).Titled("HSC_ROLL");
						columns.Add(model => model.PACKAGE_ID).Titled("PACKAGE_ID");
						columns.Add(model => model.ADMISSION_DATE).Titled("ADMISSION_DATE");
						columns.Add(model => model.PAYMENT_STATUS).Titled("PAYMENT_STATUS");
						columns.Add(model => model.DISCOUNT_TYPE).Titled("DISCOUNT_TYPE");
						columns.Add(model => model.DISCOUNT_AMOUNT).Titled("DISCOUNT_AMOUNT");
						columns.Add(model => model.RAPID_STATUS).Titled("RAPID_STATUS");
						columns.Add(model => model.USER_ID).Titled("USER_ID");
						columns.Add(model => model.VERIFIED_STATUS).Titled("VERIFIED_STATUS");
						columns.Add(model => model.ADMISSION_FEE).Titled("ADMISSION_FEE");
						columns.Add(model => model.PAY_AMOUNT).Titled("PAY_AMOUNT");
						columns.Add(model => model.ADVANCE).Titled("ADVANCE");
						columns.Add(model => model.DUE).Titled("DUE");
						columns.Add(model => model.TRANSACTION_TYPE).Titled("TRANSACTION_TYPE");
						columns.Add(model => model.RECEIVE_TO).Titled("RECEIVE_TO");
						columns.Add(model => model.RECEIVE_TO_1).Titled("RECEIVE_TO_1");
						columns.Add(model => model.CHEQUE_NO).Titled("CHEQUE_NO");
						columns.Add(model => model.CHEQUE_DATE).Titled("CHEQUE_DATE");
						columns.Add(model => model.SCHOLARSHIP_AREA_ID).Titled("SCHOLARSHIP_AREA_ID");
						columns.Add(model => model.STUDENT_INVOICE_CODE).Titled("STUDENT_INVOICE_CODE");
						columns.Add(model => model.BOARD).Titled("BOARD");
						columns.Add(model => model.BOARD_1).Titled("BOARD_1");
						columns.Add(model => model.PROGRAM_TYPE).Titled("PROGRAM_TYPE");
						columns.Add(model => model.MERITORIOUS).Titled("MERITORIOUS");
						columns.Add(model => model.SPORTS_CULTURAL).Titled("SPORTS_CULTURAL");
						columns.Add(model => model.DISABLE).Titled("DISABLE");
						columns.Add(model => model.TRIBAL).Titled("TRIBAL");
						columns.Add(model => model.SIBLING).Titled("SIBLING");
						columns.Add(model => model.DISMISSED_NOTE).Titled("DISMISSED_NOTE");
						columns.Add(model => model.DISMISSED).Titled("DISMISSED");
						columns.Add(model => model.LOCAL_GUARDIAN_EMAIL).Titled("LOCAL_GUARDIAN_EMAIL");
						columns.Add(model => model.LOCAL_GUARDIAN_CONTACT_NO).Titled("LOCAL_GUARDIAN_CONTACT_NO");
						columns.Add(model => model.LOCAL_GUARDIAN_ADDRESS).Titled("LOCAL_GUARDIAN_ADDRESS");
						columns.Add(model => model.LOCAL_GUARDIAN_NAME).Titled("LOCAL_GUARDIAN_NAME");
						columns.Add(model => model.REFERENCE_EMAIL).Titled("REFERENCE_EMAIL");
						columns.Add(model => model.REFERENCE_CONTACT_NO).Titled("REFERENCE_CONTACT_NO");
						columns.Add(model => model.REFERENCE_ADDRESS).Titled("REFERENCE_ADDRESS");
						columns.Add(model => model.REFERENCE_NAME).Titled("REFERENCE_NAME");
						columns.Add(model => model.YEARLY_INCOME).Titled("YEARLY_INCOME");
						columns.Add(model => model.GUARDIAN_RELATIONSHIP).Titled("GUARDIAN_RELATIONSHIP");
						columns.Add(model => model.GUARDIAN_EMAIL).Titled("GUARDIAN_EMAIL");
						columns.Add(model => model.GUARDIAN_PHONE).Titled("GUARDIAN_PHONE");
						columns.Add(model => model.GUARDIAN_ADDRESS).Titled("GUARDIAN_ADDRESS");
						columns.Add(model => model.GUARDIAN_PROFESSION).Titled("GUARDIAN_PROFESSION");
						columns.Add(model => model.GUARDIAN_NAME).Titled("GUARDIAN_NAME");
						columns.Add(model => model.EXPERIENCE).Titled("EXPERIENCE");
						columns.Add(model => model.BIRTH_CERTIFICATION).Titled("BIRTH_CERTIFICATION");
						columns.Add(model => model.PERMANENT_EMAIL).Titled("PERMANENT_EMAIL");
						columns.Add(model => model.PERMANENT_CONTACT_NO).Titled("PERMANENT_CONTACT_NO");
						columns.Add(model => model.PRESENT_EMAIL).Titled("PRESENT_EMAIL");
						columns.Add(model => model.PRESENT_CONTACT_NO).Titled("PRESENT_CONTACT_NO");
						columns.Add(model => model.TOTAL_CREDIT).Titled("TOTAL_CREDIT");
						columns.Add(model => model.PROGRAM_TYPE_ID).Titled("PROGRAM_TYPE_ID");
						columns.Add(model => model.PAYMENT_TYPE).Titled("PAYMENT_TYPE");
						columns.Add(model => model.PAYMENT_DATE).Titled("PAYMENT_DATE");
						columns.Add(model => model.PAYMENT_COLLECT_BY).Titled("PAYMENT_COLLECT_BY");
						columns.Add(model => model.OTHER).Titled("OTHER");
						columns.Add(model => model.NO_OF_SEMESTER).Titled("NO_OF_SEMESTER");
						columns.Add(model => model.QUOTA).Titled("QUOTA");
						columns.Add(model => model.ATTACH_FILE).Titled("ATTACH_FILE");
						columns.Add(model => model.STATUS).Titled("STATUS");
						columns.Add(model => model.FACULTY_ID).Titled("FACULTY_ID");
						columns.Add(model => model.DEPARTMENT_ID).Titled("DEPARTMENT_ID");
						columns.Add(model => model.OFFICIAL_DISCOUNT).Titled("OFFICIAL_DISCOUNT");
						columns.Add(model => model.HALL_ID).Titled("HALL_ID");
						columns.Add(model => model.REG_NO).Titled("REG_NO");
						columns.Add(model => model.NCC).Titled("NCC");
						
        })
        .WithFilterMode(GridFilterMode.FilterRow)
        .Empty("No data found")
        .MultiFilterable()
        .Filterable()
        .Sortable()
    )
}

@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/_global.js"></script>
    <script src="~/Scripts/MvcGrid/mvc-grid.js"></script>
    <link href="~/Content/MvcGrid/mvc-grid.css" rel="stylesheet" />
    <link href="~/Content/font-awesome.css" rel="stylesheet" />
    <link href="~/Content/_global.css" rel="stylesheet" />
}

