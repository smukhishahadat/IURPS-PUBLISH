@model IPagedList<IUEMS.Areas.AcademicSection.Models.DeptHead_Model>

@using PagedList;
@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutPageMetronic.cshtml";
}


@{
    string Create = Url.Action("Create", null, null, Request.Url.Scheme);
    string Details = Url.Action("Details", null, null, Request.Url.Scheme);
    string Edit = Url.Action("Edit", null, null, Request.Url.Scheme);
    string Delete = Url.Action("Delete", null, null, Request.Url.Scheme);
}

<div class='row'>
    <div class='col-md-10 text-left'>
        <h3 class='text-info'>Deparment Chairman List</h3>
    </div>
    <div class='col-md-2 text-right'>
        <button class='btn btn-success btn-madd' onclick='btnAddClick($(this))' myUrl='@Create'><i class='fa fa-plus-circle'></i> Add</button>
    </div>
</div>

@using (Html.BeginForm("Index", "DeptHead", FormMethod.Post))
{
    <div class="row">
        <div class="col-md-12">
            <table class="table table-striped table-hover table-bordered">
                <thead class="thead-dark">
                    <tr>

                        <th scope="col"><label class="control-label col-md-12" for="SEMESTER_NAME">Faculty</label></th>
                        <th scope="col"><label class="control-label col-md-12" for="SEMESTER_NAME">Department</label></th>
<<<<<<< HEAD
=======
                        <th scope="col"><label class="control-label col-md-12" for="EMPLOYEE_NAME">Employee Name</label></th>
>>>>>>> 017feaad63ca7ffaee1f9aafe8db07de049079d1
                        <th scope="col"><label class="control-label col-md-12" for="EMPLOYEE_ID">Employee ID</label></th>
                    </tr>
                    <tr>
                        <td>
                            @Html.DropDownList("FACULTY_ID", (IEnumerable<SelectListItem>)ViewData["faculty_list"], "Select Faculty", new { @class = "form-control FACULTY" })
                        </td>
                        <td>
                            @Html.DropDownList("DEPARTMENT_ID", Enumerable.Empty<SelectListItem>(), "Select Department", new { @class = "form-control DEPARTMENT" })
                        </td>
                        
                        <td>
                            <input type="text" name="EMPLOYEE_ID" id="EMPLOYEE_ID" class="form-control">
                        </td>
                    </tr>

                    <tr style="text-align: right;">
                        <td colspan="5"><input type="submit" name="btn_src" class="btn btn-info SearchReport" value="Search"></td>
                    </tr>
                </thead>

            </table>
        </div>
    </div>
}

@if (@Model != null)
{
    @(Html.Grid(Model)
                                                                .Build(columns =>
                                                                {
                                                                    columns.Add(model => model.EMPLOYEE_ID).Titled("Employee Name");
                                                                    columns.Add(model => model.FACULTY_NAME).Titled("Faculty");
                                                                    columns.Add(model => model.DEPARTMENT_NAME).Titled("Department");
                                                                    columns.Add(model => model.STATUS).Titled("Status");
                                                                    columns.Add(model => model.HEAD_HONORIUM).Titled("Honorium");
                                                                    columns.Add(model => $@"<button class='btn btn-primary btn-mdetails' value='{model.ID}' onclick='btnDetailsClick($(this));' myUrl='{Details}'><i class='fa fa-info'></i> Details</button>
    <button class='btn btn-warning btn-medit'    value='{model.ID}' onclick='btnEditClick($(this))' myUrl='{Edit}'><i class='fa fa-pencil'></i> Edit</button>").Encoded(false).Css("management-col").Titled("MANAGEMENT");


                                                                })
                                                                .UsingFilterMode(GridFilterMode.Row)
                                                                //.WithFilterMode(GridFilterMode.FilterRow)
                                                                .Empty("No data found")
            //.Filterable()
            //.Filterable()
            //.Sortable()
    )
    @Html.PagedListPager(Model, page => Url.Action("Index", "Depthead", new { i = page, search = Request.QueryString["search"] }), new PagedListRenderOptions { LinkToFirstPageFormat = "First", LinkToPreviousPageFormat = "Previous", LinkToNextPageFormat = "Next", LinkToLastPageFormat = "Last" })

}

@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/_global.js"></script>
    <script src="~/Scripts/MvcGrid/mvc-grid.js"></script>
    <link href="~/Content/MvcGrid/mvc-grid.css" rel="stylesheet" />
    <link href="~/Content/font-awesome.css" rel="stylesheet" />
    <link href="~/Content/_global.css" rel="stylesheet" />
    <script type="text/javascript">

        $(document).ready(function () {
            var getUrl = window.location;
            $(document).on("change", "#EMPLOYEE_ID", function () {
                var url = getUrl.protocol + "//" + getUrl.host + "/" + getUrl.pathname.split('/')[1] + "/check_emp_id";
                var EMPLOYEE_ID = $("#EMPLOYEE_ID").val();
                var fls = { EMPLOYEE_ID: EMPLOYEE_ID }

                $.ajax({
                    type: "POST",
                    url: url,
                    data: fls,
                    beforeSend: function () {
                        $("#loader_view").show();
                    },
                    success: function (data) {
<<<<<<< HEAD

=======
                       
>>>>>>> 017feaad63ca7ffaee1f9aafe8db07de049079d1
                        $("#loader_view").hide();

                        if (data != null) {
                            //$("#EMPLOYEE_ID").html("Employee ID Already Exist");
                            $('#form [data-valmsg-for="EMPLOYEE_ID"]').html("Employee ID Already Exist");
                        }
                        else {
                            $('#form [data-valmsg-for="EMPLOYEE_ID"]').html("");
                        }
                    }
                    //data: JSON.stringify(person)
                });
            });
            //get Department
            $(document).on("change", ".FACULTY", function () {
                var url = getUrl.protocol + "//" + getUrl.host + "/" + getUrl.pathname.split('/')[1] + "/Depthead/get_dept";
                var FACULTY = $(this).val();
                var fls = { FACULTY: FACULTY }
<<<<<<< HEAD

=======
              
>>>>>>> 017feaad63ca7ffaee1f9aafe8db07de049079d1
                $.ajax({
                    type: "POST",
                    url: url,
                    data: fls,
                    beforeSend: function () {
                        $("#loader_view").show();
                    },
                    success: function (data) {

                        $("#loader_view").hide();
                        $(".DEPARTMENT").html('<option value="">--Select--</option>');
                        $.each(data, function (key, val) {

                            var ID = val.ID;

                            var tr = "<option value='" + val.ID + "'>" + val.DEPARTMENT_NAME + "</option>";
                            $(".DEPARTMENT").append(tr);
                        });
                    }
                    //data: JSON.stringify(person)
                });
            });
<<<<<<< HEAD
        
            //Auto Complete
            $(document).on("keyup", "#EMPLOYEE_ID", function () {
                
                var url = getUrl.protocol + "//" + getUrl.host + "/AssignExaminer/GetTeachers";
                $("#EMPLOYEE_ID").autocomplete({
                    source: function (request, response) {
                        $.ajax({
                            url: url,
                            type: "POST",
                            dataType: "json",
                            data: { Prefix: request.term },
                            success: function (data) {
                                debugger;
                                response($.map(data, function (item) {
                                    return { label: item.EMPLOYEE_ID + "-" + item.EMPLOYEE_NAME, value: item.EMPLOYEE_ID };
                                }))
                            }
                        })
                    },
                    messages: {
                        noResults: "", results: ""
                    }
                });
            });
=======
>>>>>>> 017feaad63ca7ffaee1f9aafe8db07de049079d1
        });
    </script>
}


